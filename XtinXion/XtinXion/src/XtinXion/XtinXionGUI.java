package XtinXion;

import java.awt.Color;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * This is the class that is responsible for handling the GUI
 * @author Jon Patman
 */
public class XtinXionGUI extends javax.swing.JFrame {

    String name; // Player's name
    String SpeciesName; // Player Selected Species
    String[] speciesTypes = new String[]{"Species I", "Species II", 
        "Species III", "Species IV"};
    private int speciesNum;
    private Game game;
    public Human human;
    public Computer computer;
    private String CurrentPlayer;
    private GameBoard Board;
    public int HumanPosition;
    public int ComputerPosition;
    public int boardIndex;
    public Card CurrentCard;
    private int HumanLife;
    private int ComputerLife;
    public String WinningPlayer;
    public boolean GameOver = false;
    public boolean BattleSlot = false;
    private boolean GameStart = false;
    public String deckName;
    public String cardNum;
    public String CardGraphic;
    private ImageIcon BlankCardIcon;
    private ImageIcon WinnerIcon;
    private ImageIcon LoserIcon;
    private ImageIcon player1slot;
    private ImageIcon player2slot;
    private String player1Location;
    private String player2Location;
    private String BattleWinner;


    /**
     * Creates new form XtinXionGUI
     */
    public XtinXionGUI() {

        initComponents();
        getContentPane().setBackground(Color.DARK_GRAY);

    }

    /**
     * This method is called from within the constructor to initialize 
     * the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        index25 = new javax.swing.JLabel();
        index36 = new javax.swing.JLabel();
        index16 = new javax.swing.JLabel();
        index23 = new javax.swing.JLabel();
        index24 = new javax.swing.JLabel();
        index10 = new javax.swing.JLabel();
        index33 = new javax.swing.JLabel();
        index13 = new javax.swing.JLabel();
        index1 = new javax.swing.JLabel();
        index11 = new javax.swing.JLabel();
        index8 = new javax.swing.JLabel();
        index39 = new javax.swing.JLabel();
        index15 = new javax.swing.JLabel();
        index2_37 = new javax.swing.JLabel();
        index26 = new javax.swing.JLabel();
        index35 = new javax.swing.JLabel();
        index9 = new javax.swing.JLabel();
        index28 = new javax.swing.JLabel();
        index34 = new javax.swing.JLabel();
        index5 = new javax.swing.JLabel();
        index4 = new javax.swing.JLabel();
        index31 = new javax.swing.JLabel();
        index6 = new javax.swing.JLabel();
        index3 = new javax.swing.JLabel();
        index30 = new javax.swing.JLabel();
        index29 = new javax.swing.JLabel();
        index0 = new javax.swing.JLabel();
        index14 = new javax.swing.JLabel();
        index38 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        index18 = new javax.swing.JLabel();
        index19 = new javax.swing.JLabel();
        index21 = new javax.swing.JLabel();
        index20 = new javax.swing.JLabel();
        index7_32 = new javax.swing.JLabel();
        index12_27 = new javax.swing.JLabel();
        index17_22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        rollButton = new javax.swing.JButton();
        MenuButton = new javax.swing.JButton();
        RulesButton = new javax.swing.JButton();
        QuitButton = new javax.swing.JButton();
        humanSpeciesField = new javax.swing.JPanel();
        HumanCurrentCardGraphic = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        humanSpeciesLabel8 = new javax.swing.JLabel();
        HumanMateAttField = new javax.swing.JLabel();
        humanPlayerNameField = new javax.swing.JLabel();
        humanSpeciesLabel3 = new javax.swing.JLabel();
        humanSpeciesLabel4 = new javax.swing.JLabel();
        humanSpeciesLabel6 = new javax.swing.JLabel();
        humanSpeciesLabel = new javax.swing.JLabel();
        humanSpeciesLabel1 = new javax.swing.JLabel();
        humanSpeciesLabel7 = new javax.swing.JLabel();
        HumanPredAvoEvaField = new javax.swing.JLabel();
        HumanPopLevelField = new javax.swing.JLabel();
        humanSpeciesLabel2 = new javax.swing.JLabel();
        humanSpeciesLabel5 = new javax.swing.JLabel();
        humanSpeciesName = new javax.swing.JLabel();
        HumanForageField = new javax.swing.JLabel();
        HumanEnvStrTolField = new javax.swing.JLabel();
        HumanTerrDefField = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Player1PositionLabel = new javax.swing.JLabel();
        player1RollLabel = new javax.swing.JLabel();
        Player1PositionField = new javax.swing.JLabel();
        Player1RollField = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        ComputerCurrentCardGraphic = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        humanSpeciesLabel9 = new javax.swing.JLabel();
        ComputerMateAttField = new javax.swing.JLabel();
        computerPlayerNameField = new javax.swing.JLabel();
        humanSpeciesLabel10 = new javax.swing.JLabel();
        humanSpeciesLabel11 = new javax.swing.JLabel();
        humanSpeciesLabel12 = new javax.swing.JLabel();
        humanSpeciesLabel13 = new javax.swing.JLabel();
        humanSpeciesLabel14 = new javax.swing.JLabel();
        humanSpeciesLabel15 = new javax.swing.JLabel();
        ComputerPredAvoEvaField = new javax.swing.JLabel();
        ComputerPopLevelField = new javax.swing.JLabel();
        humanSpeciesLabel16 = new javax.swing.JLabel();
        humanSpeciesLabel17 = new javax.swing.JLabel();
        computerSpeciesName = new javax.swing.JLabel();
        ComputerForageField = new javax.swing.JLabel();
        ComputerEnvStrTolField = new javax.swing.JLabel();
        ComputerTerrDefField = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        player2RollLabel = new javax.swing.JLabel();
        Player2RollField = new javax.swing.JLabel();
        Player2PositionField = new javax.swing.JLabel();
        Player2PositionLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("XtinXion");
        setBackground(new java.awt.Color(0, 0, 0));
        setMaximumSize(new java.awt.Dimension(1366, 700));
        setMinimumSize(new java.awt.Dimension(1366, 700));
        setPreferredSize(new java.awt.Dimension(1020, 720));

        jPanel2.setBackground(new java.awt.Color(10, 10, 10));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        index25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index25.setText("jLabel8");
        index25.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index36.setText("jLabel8");
        index36.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index16.setText("jLabel8");
        index16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index23.setText("jLabel8");
        index23.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index24.setText("jLabel8");
        index24.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index10.setText("jLabel8");
        index10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index33.setText("jLabel8");
        index33.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index13.setText("jLabel8");
        index13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index1.setText("1");
        index1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index11.setText("jLabel8");
        index11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index8.setText("jLabel8");
        index8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index39.setText("jLabel8");
        index39.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index15.setText("jLabel8");
        index15.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index2_37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/battle slot(small).jpg"))); // NOI18N
        index2_37.setText("jLabel8");
        index2_37.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 1, true));

        index26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index26.setText("jLabel8");
        index26.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index35.setText("jLabel8");
        index35.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index9.setText("jLabel8");
        index9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index28.setText("jLabel8");
        index28.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index34.setText("jLabel8");
        index34.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index5.setText("jLabel8");
        index5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index4.setText("jLabel8");
        index4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index31.setText("jLabel8");
        index31.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index6.setText("jLabel8");
        index6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index3.setText("jLabel8");
        index3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index30.setText("jLabel8");
        index30.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index29.setText("jLabel8");
        index29.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index0.setBackground(new java.awt.Color(255, 0, 0));
        index0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index0.setText("0");
        index0.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index14.setText("jLabel8");
        index14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index38.setText("jLabel8");
        index38.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NatSelDeck Back(small).jpg"))); // NOI18N
        jLabel1.setText("NatSelDeckBack");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/GenDriftDeck Back(small).jpg"))); // NOI18N
        jLabel2.setText("GenDriftDeckBack");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MutationDeck Back(small).jpg"))); // NOI18N
        jLabel3.setText("MutationDeckBack");

        index18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_GDD(small)1.jpg"))); // NOI18N
        index18.setText("jLabel8");
        index18.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index19.setText("jLabel8");
        index19.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_NSD(small).jpg"))); // NOI18N
        index21.setText("jLabel8");
        index21.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/slot_MD(small).jpg"))); // NOI18N
        index20.setText("jLabel8");
        index20.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        index7_32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/battle slot(small).jpg"))); // NOI18N
        index7_32.setText("jLabel8");
        index7_32.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 1, true));

        index12_27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/battle slot(small).jpg"))); // NOI18N
        index12_27.setText("jLabel8");
        index12_27.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 1, true));

        index17_22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/battle slot(small).jpg"))); // NOI18N
        index17_22.setText("jLabel8");
        index17_22.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 51), 1, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(index39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(index4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(index0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(201, 201, 201)
                                .addComponent(index35, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(index5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(index34, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(index38, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(index3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(index1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(index36, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(index2_37, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(index6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(index33, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(index31, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(index7_32, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(index8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(index9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(index10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(index30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(index29, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(index28, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(index11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(index12_27, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(index25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(index24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(index13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(index26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(index14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(index15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(index23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(index16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(index17_22, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(index19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(index21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(index18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(index20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {index0, index1, index10, index11, index13, index14, index15, index16, index23, index24, index25, index26, index28, index29, index3, index30, index31, index33, index34, index35, index36, index38, index39, index4, index5, index6, index8, index9});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(index19)
                        .addGap(0, 0, 0)
                        .addComponent(index18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(index20))
                            .addComponent(index17_22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(index23))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(index0)
                            .addComponent(index35)
                            .addComponent(index34)
                            .addComponent(index9)
                            .addComponent(index10))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(index1)
                                    .addComponent(index36)
                                    .addComponent(index33))
                                .addGap(0, 0, 0)
                                .addComponent(index2_37, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(index3)
                                    .addComponent(index6)
                                    .addComponent(index38))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(index4)
                            .addComponent(index5)
                            .addComponent(index39)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(index7_32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(index12_27, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(index31)
                                    .addComponent(index28)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(index8)
                                            .addComponent(index11))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(index30)
                            .addComponent(index29)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(index25)
                                    .addComponent(index24))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(index26)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(index13)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(index16)
                                        .addComponent(index21)))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(index14)
                            .addComponent(index15))))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {index0, index1, index10, index11, index13, index14, index15, index16, index23, index24, index25, index26, index28, index29, index3, index30, index31, index33, index34, index35, index36, index38, index39, index4, index5, index6, index8, index9});

        jPanel3.setBackground(new java.awt.Color(17, 17, 17));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 3, true));

        rollButton.setBackground(new java.awt.Color(0, 32, 32));
        rollButton.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        rollButton.setForeground(new java.awt.Color(255, 255, 255));
        rollButton.setText("Roll");
        rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollButtonActionPerformed(evt);
            }
        });

        MenuButton.setBackground(new java.awt.Color(0, 32, 32));
        MenuButton.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        MenuButton.setForeground(new java.awt.Color(255, 255, 255));
        MenuButton.setText("New Game");
        MenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuButtonActionPerformed(evt);
            }
        });

        RulesButton.setBackground(new java.awt.Color(0, 26, 26));
        RulesButton.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        RulesButton.setForeground(new java.awt.Color(255, 255, 255));
        RulesButton.setText("Rules");
        RulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RulesButtonActionPerformed(evt);
            }
        });

        QuitButton.setBackground(new java.awt.Color(0, 32, 32));
        QuitButton.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        QuitButton.setForeground(new java.awt.Color(255, 255, 255));
        QuitButton.setText("Quit");
        QuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(MenuButton)
                    .addComponent(RulesButton)
                    .addComponent(rollButton)
                    .addComponent(QuitButton))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {MenuButton, QuitButton, RulesButton, rollButton});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MenuButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RulesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rollButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QuitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        humanSpeciesField.setBackground(new java.awt.Color(0, 0, 0));
        humanSpeciesField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        HumanCurrentCardGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Card Blank.jpg"))); // NOI18N
        HumanCurrentCardGraphic.setText("jLabel4");
        HumanCurrentCardGraphic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel1.setBackground(new java.awt.Color(0, 24, 24));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        humanSpeciesLabel8.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel8.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel8.setText("Population Level:");

        HumanMateAttField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        HumanMateAttField.setForeground(new java.awt.Color(255, 255, 255));
        HumanMateAttField.setText(" ");

        humanPlayerNameField.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        humanPlayerNameField.setForeground(new java.awt.Color(255, 255, 255));

        humanSpeciesLabel3.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel3.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel3.setText("& Evasion:");

        humanSpeciesLabel4.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel4.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel4.setText("Predator Avoidance");

        humanSpeciesLabel6.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel6.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel6.setText("Foraging:");

        humanSpeciesLabel.setFont(new java.awt.Font("BankGothic Md BT", 0, 18)); // NOI18N
        humanSpeciesLabel.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel.setText("Species:");

        humanSpeciesLabel1.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel1.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel1.setText("Environmental Stress");

        humanSpeciesLabel7.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel7.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel7.setText("Territorial Defense:");

        HumanPredAvoEvaField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        HumanPredAvoEvaField.setForeground(new java.awt.Color(255, 255, 255));
        HumanPredAvoEvaField.setText(" ");

        HumanPopLevelField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        HumanPopLevelField.setForeground(new java.awt.Color(255, 255, 255));
        HumanPopLevelField.setText(" ");

        humanSpeciesLabel2.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel2.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel2.setText("Tolerance:");

        humanSpeciesLabel5.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel5.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel5.setText("Mate Attraction:");

        humanSpeciesName.setFont(new java.awt.Font("BankGothic Md BT", 0, 18)); // NOI18N
        humanSpeciesName.setForeground(new java.awt.Color(255, 255, 255));

        HumanForageField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        HumanForageField.setForeground(new java.awt.Color(255, 255, 255));
        HumanForageField.setText(" ");

        HumanEnvStrTolField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        HumanEnvStrTolField.setForeground(new java.awt.Color(255, 255, 255));
        HumanEnvStrTolField.setText(" ");

        HumanTerrDefField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        HumanTerrDefField.setForeground(new java.awt.Color(255, 255, 255));
        HumanTerrDefField.setText(" ");

        jLabel5.setFont(new java.awt.Font("BankGothic Md BT", 0, 22)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Player 1:");

        Player1PositionLabel.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        Player1PositionLabel.setForeground(new java.awt.Color(255, 255, 255));
        Player1PositionLabel.setText("Board Position #:");

        player1RollLabel.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        player1RollLabel.setForeground(new java.awt.Color(255, 255, 255));
        player1RollLabel.setText("Player 1 rolled a:");

        Player1PositionField.setFont(new java.awt.Font("DejaVu Sans", 3, 12)); // NOI18N
        Player1PositionField.setForeground(new java.awt.Color(255, 255, 255));
        Player1PositionField.setText(" ");

        Player1RollField.setFont(new java.awt.Font("DejaVu Sans", 3, 12)); // NOI18N
        Player1RollField.setForeground(new java.awt.Color(255, 255, 255));
        Player1RollField.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(humanSpeciesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(humanSpeciesName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(humanSpeciesLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanPopLevelField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(humanSpeciesLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanPredAvoEvaField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(humanSpeciesLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanMateAttField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(humanSpeciesLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanForageField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(humanSpeciesLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanTerrDefField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(player1RollLabel)
                                    .addComponent(Player1PositionLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Player1PositionField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Player1RollField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(humanSpeciesLabel1)
                                    .addComponent(humanSpeciesLabel2)
                                    .addComponent(humanSpeciesLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanEnvStrTolField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(humanPlayerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(humanPlayerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(humanSpeciesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(humanSpeciesName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player1RollLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player1RollField))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player1PositionLabel)
                    .addComponent(Player1PositionField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumanPopLevelField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(humanSpeciesLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel2)
                    .addComponent(HumanEnvStrTolField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(humanSpeciesLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel3)
                    .addComponent(HumanPredAvoEvaField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumanMateAttField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumanForageField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HumanTerrDefField))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout humanSpeciesFieldLayout = new javax.swing.GroupLayout(humanSpeciesField);
        humanSpeciesField.setLayout(humanSpeciesFieldLayout);
        humanSpeciesFieldLayout.setHorizontalGroup(
            humanSpeciesFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, humanSpeciesFieldLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HumanCurrentCardGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        humanSpeciesFieldLayout.setVerticalGroup(
            humanSpeciesFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(humanSpeciesFieldLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(humanSpeciesFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(humanSpeciesFieldLayout.createSequentialGroup()
                        .addComponent(HumanCurrentCardGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        ComputerCurrentCardGraphic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Card Blank.jpg"))); // NOI18N
        ComputerCurrentCardGraphic.setText("jLabel4");
        ComputerCurrentCardGraphic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel4.setBackground(new java.awt.Color(0, 24, 24));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        humanSpeciesLabel9.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel9.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel9.setText("Population Level:");

        ComputerMateAttField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        ComputerMateAttField.setForeground(new java.awt.Color(255, 255, 255));
        ComputerMateAttField.setText(" ");

        computerPlayerNameField.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        computerPlayerNameField.setForeground(new java.awt.Color(255, 255, 255));

        humanSpeciesLabel10.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel10.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel10.setText("& Evasion:");

        humanSpeciesLabel11.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel11.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel11.setText("Predator Avoidance");

        humanSpeciesLabel12.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel12.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel12.setText("Foraging:");

        humanSpeciesLabel13.setFont(new java.awt.Font("BankGothic Md BT", 0, 18)); // NOI18N
        humanSpeciesLabel13.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel13.setText("Species:");

        humanSpeciesLabel14.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel14.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel14.setText("Environmental Stress");

        humanSpeciesLabel15.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel15.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel15.setText("Territorial Defense:");

        ComputerPredAvoEvaField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        ComputerPredAvoEvaField.setForeground(new java.awt.Color(255, 255, 255));
        ComputerPredAvoEvaField.setText(" ");

        ComputerPopLevelField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        ComputerPopLevelField.setForeground(new java.awt.Color(255, 255, 255));
        ComputerPopLevelField.setText(" ");

        humanSpeciesLabel16.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel16.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel16.setText("Tolerance:");

        humanSpeciesLabel17.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        humanSpeciesLabel17.setForeground(new java.awt.Color(255, 255, 255));
        humanSpeciesLabel17.setText("Mate Attraction:");

        computerSpeciesName.setFont(new java.awt.Font("BankGothic Md BT", 0, 18)); // NOI18N
        computerSpeciesName.setForeground(new java.awt.Color(255, 255, 255));

        ComputerForageField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        ComputerForageField.setForeground(new java.awt.Color(255, 255, 255));
        ComputerForageField.setText(" ");

        ComputerEnvStrTolField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        ComputerEnvStrTolField.setForeground(new java.awt.Color(255, 255, 255));
        ComputerEnvStrTolField.setText(" ");

        ComputerTerrDefField.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        ComputerTerrDefField.setForeground(new java.awt.Color(255, 255, 255));
        ComputerTerrDefField.setText(" ");

        jLabel8.setFont(new java.awt.Font("BankGothic Md BT", 0, 22)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Player 2:");

        player2RollLabel.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        player2RollLabel.setForeground(new java.awt.Color(255, 255, 255));
        player2RollLabel.setText("Player 1 rolled a:");

        Player2RollField.setFont(new java.awt.Font("DejaVu Sans", 3, 12)); // NOI18N
        Player2RollField.setForeground(new java.awt.Color(255, 255, 255));
        Player2RollField.setText(" ");

        Player2PositionField.setFont(new java.awt.Font("DejaVu Sans", 3, 12)); // NOI18N
        Player2PositionField.setForeground(new java.awt.Color(255, 255, 255));
        Player2PositionField.setText(" ");

        Player2PositionLabel.setFont(new java.awt.Font("BankGothic Md BT", 0, 14)); // NOI18N
        Player2PositionLabel.setForeground(new java.awt.Color(255, 255, 255));
        Player2PositionLabel.setText("Board Position #:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(computerPlayerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(humanSpeciesLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computerSpeciesName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(player2RollLabel)
                            .addComponent(Player2PositionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Player2PositionField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player2RollField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(humanSpeciesLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComputerTerrDefField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(humanSpeciesLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComputerForageField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(humanSpeciesLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComputerMateAttField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(humanSpeciesLabel11)
                            .addComponent(humanSpeciesLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComputerPredAvoEvaField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(humanSpeciesLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComputerEnvStrTolField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(humanSpeciesLabel14)
                            .addComponent(humanSpeciesLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComputerPopLevelField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(computerPlayerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(humanSpeciesLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(computerSpeciesName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player2RollLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Player2RollField))
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player2PositionLabel)
                    .addComponent(Player2PositionField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComputerPopLevelField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(humanSpeciesLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel16)
                    .addComponent(ComputerEnvStrTolField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(humanSpeciesLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel10)
                    .addComponent(ComputerPredAvoEvaField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComputerMateAttField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComputerForageField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humanSpeciesLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComputerTerrDefField))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ComputerCurrentCardGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(ComputerCurrentCardGraphic, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(humanSpeciesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(humanSpeciesField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
        URL imgUrl1 = getClass().getResource("/images/Card Blank.jpg");
        BlankCardIcon = new ImageIcon(imgUrl1);
        HumanCurrentCardGraphic.setIcon(BlankCardIcon);
        ComputerCurrentCardGraphic.setIcon(BlankCardIcon);
        enableHumanSlot(HumanPosition);
        enableHumanSlot(HumanPosition);

        name = JOptionPane.showInputDialog(this, "Please type in your name: ", 
                null, JOptionPane.PLAIN_MESSAGE);

        speciesNum = JOptionPane.showOptionDialog(this,
                "Please select a species type: ", "Species Selection Menu", 
                JOptionPane.OK_OPTION, JOptionPane.PLAIN_MESSAGE, null, 
                speciesTypes, speciesTypes[0]);
        if (speciesNum == 0) {
            SpeciesName = "Species I";
        } else if (speciesNum == 1) {
            SpeciesName = "Species II";
        } else if (speciesNum == 2) {
            SpeciesName = "Species III";
        } else if (speciesNum == 3) {
            SpeciesName = "Species IV";
        }

        Board = new GameBoard();
        game = new Game(Board, name, SpeciesName);

        this.humanPlayerNameField.setText(name);
        this.humanSpeciesName.setText(SpeciesName);
        this.HumanPopLevelField.
                setText(Integer.toString(game.human.getPopLevel()));
        this.HumanEnvStrTolField.
                setText(Integer.toString(game.human.getEnvStrTol()));
        this.HumanPredAvoEvaField.
                setText(Integer.toString(game.human.getPredAvoEva()));
        this.HumanMateAttField.
                setText(Integer.toString(game.human.getMateAtt()));
        this.HumanForageField.
                setText(Integer.toString(game.human.getForage()));
        this.HumanTerrDefField.
                setText(Integer.toString(game.human.getTerrDef()));

        this.computerPlayerNameField.setText("Computer");
        this.computerSpeciesName.
                setText(game.computer.getSpeciesName());
        this.ComputerPopLevelField.
                setText(Integer.toString(game.computer.getPopLevel()));
        this.ComputerEnvStrTolField.
                setText(Integer.toString(game.computer.getEnvStrTol()));
        this.ComputerPredAvoEvaField.
                setText(Integer.toString(game.computer.getPredAvoEva()));
        this.ComputerMateAttField.
                setText(Integer.toString(game.computer.getMateAtt()));
        this.ComputerForageField.
                setText(Integer.toString(game.computer.getForage()));
        this.ComputerTerrDefField.
                setText(Integer.toString(game.computer.getTerrDef()));

        GameStart = true; // Allows roll button to become active


    }//GEN-LAST:event_MenuButtonActionPerformed

    private void RulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RulesButtonActionPerformed
        JOptionPane.showMessageDialog(null, "XtinXion is a game that "
                + "demonstrates how a species can evolve from several "
                + "factors such as random genetic mutations that may or "
                + "may not benefit the species in an environment. "
                + "\n1) You will begin the game by selecting a species with "
                + "pre-determined attributes. "
                + "\n2) You will then play the game by rolling a dice that "
                + "determines your position on the game board. "
                + "\n3) Each position on the board corresponds to a certain "
                + "deck or action as in the case of the battle slot. "
                + "\n4) Whichever slot you land on will determine the action "
                + "that is performed. "
                + "\n5) If you land on a deck slot you will draw a card from "
                + "that deck and the action will automatically be performed. "
                + "\n6) These actions typically include an assesment of your "
                + "species fitness in terms of the given situation and will "
                + "react accordingly. "
                + "\n7) If you land on one of the battle slots you and the "
                + "other player will play a series of three rounds in which "
                + "each one of you will roll a die and the person who loses "
                + "at least two of the three rounds will lose a "
                + "population point. "
                + "\n8) When a player reaches a population level of "
                + "zero at any point in the game that player loses."
                + "\nGood luck!", "Rules", JOptionPane.QUESTION_MESSAGE);
    }//GEN-LAST:event_RulesButtonActionPerformed

    private void rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollButtonActionPerformed
        // If GameStart is false, clicking the roll button does nothing
        if (GameStart = true) {
            CurrentPlayer = "HUMAN";

            if (CurrentPlayer.equals("HUMAN") && game.human.getPopLevel() > 0 
                    && game.computer.getPopLevel() > 0) {
                System.out.println("DEBUG");
                CurrentCard = Board.playBoard(CurrentPlayer);
                this.Player1RollField
                        .setText(Integer.toString(Board.getInitialRoll()));
                enableHumanSlot(HumanPosition);
                HumanPosition = Board.getHumanBoardIndex();
                disableHumanSlot(HumanPosition);
                this.Player1PositionField
                        .setText(Integer.toString(HumanPosition));
                HumanCurrentCardGraphic.setIcon(CurrentCard.getImageIcon());
                System.out.println("DEBUG: Human Position: " + HumanPosition);
                CurrentCard.toString();
                if (CurrentCard.title.equals("BattleCard")) {
                    BattleWinner = game.Battle();
                    if (BattleWinner.equals("COMPUTER")) {
                        JOptionPane.showMessageDialog(null, 
                                "The computer player has won the "
                                        + "battle round!", null, 
                                        JOptionPane.WARNING_MESSAGE);
                    } else if (BattleWinner.equals("HUMAN")) {
                        JOptionPane.showMessageDialog(null, name + 
                                " has won the battle round!", null, 
                                JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    game.processCardHuman(CurrentCard);
                    this.HumanPopLevelField.setText(Integer
                            .toString(game.human.getPopLevel()));
                    this.HumanEnvStrTolField.setText(Integer
                            .toString(game.human.getEnvStrTol()));
                    this.HumanPredAvoEvaField.setText(Integer
                            .toString(game.human.getPredAvoEva()));
                    this.HumanMateAttField.setText(Integer
                            .toString(game.human.getMateAtt()));
                    this.HumanForageField.setText(Integer
                            .toString(game.human.getForage()));
                    this.HumanTerrDefField.setText(Integer
                            .toString(game.human.getTerrDef()));
                }

                HumanLife = game.human.getPopLevel();
                if (HumanLife <= 0) {
                    URL imgUrl2 = getClass()
                            .getResource("/images/LoserCard.jpg");
                    LoserIcon = new ImageIcon(imgUrl2);
                    HumanCurrentCardGraphic.setIcon(LoserIcon);
                    URL imgUrl3 = getClass()
                            .getResource("/images/WinnerCard.jpg");
                    WinnerIcon = new ImageIcon(imgUrl3);
                    ComputerCurrentCardGraphic.setIcon(WinnerIcon);
                    JOptionPane
                            .showMessageDialog(null, name + " has died!", "",
                                    JOptionPane.WARNING_MESSAGE);
                    WinningPlayer = "COMPUTER";
                    enableHumanSlot(HumanPosition);
                    enableComputerSlot(ComputerPosition);
                    GameOver = true;
                }
                ComputerLife = game.computer.getPopLevel();
                if (ComputerLife <= 0) {
                    URL imgUrl2 = getClass()
                            .getResource("/images/LoserCard.jpg");
                    LoserIcon = new ImageIcon(imgUrl2);
                    ComputerCurrentCardGraphic.setIcon(LoserIcon);
                    URL imgUrl3 = getClass()
                            .getResource("/images/WinnerCard.jpg");
                    WinnerIcon = new ImageIcon(imgUrl3);
                    HumanCurrentCardGraphic.setIcon(WinnerIcon);
                    JOptionPane.showMessageDialog(null, 
                            "The computer player has died!", "", 
                            JOptionPane.WARNING_MESSAGE);
                    WinningPlayer = "HUMAN";
                    enableHumanSlot(HumanPosition);
                    enableComputerSlot(ComputerPosition);
                    GameOver = true;
                }
                CurrentPlayer = "COMPUTER";

            }

            if (CurrentPlayer.equals("COMPUTER") && 
                    game.human.getPopLevel() > 0 && 
                    game.computer.getPopLevel() > 0) {
                System.out.println("DEBUG: Computer's Turn");
                CurrentCard = Board.playBoard(CurrentPlayer);
                this.Player2RollField
                        .setText(Integer.toString(Board.getInitialRoll()));
                enableComputerSlot(ComputerPosition);
                ComputerPosition = Board.getCompBoardIndex();
                disableComputerSlot(ComputerPosition);
                this.Player2PositionField
                        .setText(Integer.toString(ComputerPosition));
                ComputerCurrentCardGraphic.setIcon(CurrentCard.getImageIcon());
                System.out.println("DEBUG: Computer Position: "
                        + ComputerPosition);
                CurrentCard.toString();
                if (CurrentCard.title.equals("BattleCard")) {
                    BattleWinner = game.Battle();
                    if (BattleWinner.equals("COMPUTER")) {
                        JOptionPane.showMessageDialog(null, 
                            "The computer player has won the battle round!",
                                null, JOptionPane.WARNING_MESSAGE);
                    } else if (BattleWinner.equals("HUMAN")) {
                        JOptionPane.showMessageDialog(null, name + 
                                " has won the battle round!", null, 
                                JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    game.processCardComputer(CurrentCard);
                    this.ComputerPopLevelField.setText(Integer
                            .toString(game.computer.getPopLevel()));
                    this.ComputerEnvStrTolField.setText(Integer
                            .toString(game.computer.getEnvStrTol()));
                    this.ComputerPredAvoEvaField.setText(Integer
                            .toString(game.computer.getPredAvoEva()));
                    this.ComputerMateAttField.setText(Integer
                            .toString(game.computer.getMateAtt()));
                    this.ComputerForageField.setText(Integer
                            .toString(game.computer.getForage()));
                    this.ComputerTerrDefField.setText(Integer
                            .toString(game.computer.getTerrDef()));
                }

                ComputerLife = game.computer.getPopLevel();
                if (ComputerLife <= 0) {
                    URL imgUrl2 = getClass()
                            .getResource("/images/LoserCard.jpg");
                    LoserIcon = new ImageIcon(imgUrl2);
                    ComputerCurrentCardGraphic.setIcon(LoserIcon);
                    URL imgUrl3 = getClass()
                            .getResource("/images/WinnerCard.jpg");
                    WinnerIcon = new ImageIcon(imgUrl3);
                    HumanCurrentCardGraphic.setIcon(WinnerIcon);
                    JOptionPane
                            .showMessageDialog(null, 
                                    "The computer player has died!", "", 
                                    JOptionPane.WARNING_MESSAGE);
                    WinningPlayer = "HUMAN";
                    enableHumanSlot(HumanPosition);
                    enableComputerSlot(ComputerPosition);
                    GameOver = true;
                }
                HumanLife = game.human.getPopLevel();
                if (HumanLife <= 0) {
                    URL imgUrl2 = getClass()
                            .getResource("/images/LoserCard.jpg");
                    LoserIcon = new ImageIcon(imgUrl2);
                    HumanCurrentCardGraphic.setIcon(LoserIcon);
                    URL imgUrl3 = getClass()
                            .getResource("/images/WinnerCard.jpg");
                    WinnerIcon = new ImageIcon(imgUrl3);
                    ComputerCurrentCardGraphic.setIcon(WinnerIcon);
                    JOptionPane.showMessageDialog(null, name + " has died!",
                            "", JOptionPane.WARNING_MESSAGE);
                    WinningPlayer = "COMPUTER";
                    enableHumanSlot(HumanPosition);
                    enableComputerSlot(ComputerPosition);
                    GameOver = true;
                }
                CurrentPlayer = "COMPUTER";

            }
        }
    }//GEN-LAST:event_rollButtonActionPerformed

    private void QuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_QuitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XtinXionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XtinXionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XtinXionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XtinXionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XtinXionGUI().setVisible(true);
                JOptionPane.showMessageDialog(null, "Welcome to XtinXion! "
                        + "Press 'New Game' to begin, or press 'Rules'"
                        + " to learn about the game!", "",
                        JOptionPane.PLAIN_MESSAGE);
            }
        });
    }

    public void disableHumanSlot(int HumanPosition) {
        this.HumanPosition = HumanPosition;
        if (HumanPosition == 0) {
            index0.setEnabled(false);
        }
        if (HumanPosition == 1) {
            index1.setEnabled(false);
        }
        if (HumanPosition == 2 || HumanPosition == 37) {
            index2_37.setEnabled(false);
        }
        if (HumanPosition == 3) {
            index3.setEnabled(false);
        }
        if (HumanPosition == 4) {
            index4.setEnabled(false);
        }
        if (HumanPosition == 5) {
            index5.setEnabled(false);
        }
        if (HumanPosition == 6) {
            index6.setEnabled(false);
        }
        if (HumanPosition == 7 || HumanPosition == 32) {
            index7_32.setEnabled(false);
        }
        if (HumanPosition == 8) {
            index8.setEnabled(false);
        }
        if (HumanPosition == 9) {
            index9.setEnabled(false);
        }
        if (HumanPosition == 10) {
            index10.setEnabled(false);
        }
        if (HumanPosition == 11) {
            index11.setEnabled(false);
        }
        if (HumanPosition == 12 || HumanPosition == 27) {
            index12_27.setEnabled(false);
        }
        if (HumanPosition == 13) {
            index13.setEnabled(false);
        }
        if (HumanPosition == 14) {
            index14.setEnabled(false);
        }
        if (HumanPosition == 15) {
            index15.setEnabled(false);
        }
        if (HumanPosition == 16) {
            index16.setEnabled(false);
        }
        if (HumanPosition == 17 || HumanPosition == 22) {
            index17_22.setEnabled(false);
        }
        if (HumanPosition == 18) {
            index18.setEnabled(false);
        }
        if (HumanPosition == 19) {
            index19.setEnabled(false);
        }
        if (HumanPosition == 20) {
            index20.setEnabled(false);
        }
        if (HumanPosition == 21) {
            index21.setEnabled(false);
        }
        if (HumanPosition == 23) {
            index23.setEnabled(false);
        }
        if (HumanPosition == 24) {
            index24.setEnabled(false);
        }
        if (HumanPosition == 25) {
            index25.setEnabled(false);
        }
        if (HumanPosition == 26) {
            index26.setEnabled(false);
        }
        if (HumanPosition == 28) {
            index28.setEnabled(false);
        }
        if (HumanPosition == 29) {
            index29.setEnabled(false);
        }
        if (HumanPosition == 30) {
            index30.setEnabled(false);
        }
        if (HumanPosition == 31) {
            index31.setEnabled(false);
        }
        if (HumanPosition == 33) {
            index33.setEnabled(false);
        }
        if (HumanPosition == 34) {
            index34.setEnabled(false);
        }
        if (HumanPosition == 35) {
            index35.setEnabled(false);
        }
        if (HumanPosition == 36) {
            index36.setEnabled(false);
        }
        if (HumanPosition == 38) {
            index38.setEnabled(false);
        }
        if (HumanPosition == 39) {
            index39.setEnabled(false);
        }
    }

    public void enableHumanSlot(int HumanPosition) {
        this.HumanPosition = HumanPosition;
        if (HumanPosition == 0) {
            index0.setEnabled(true);
        }
        if (HumanPosition == 1) {
            index1.setEnabled(true);
        }
        if (HumanPosition == 2 || HumanPosition == 37) {
            index2_37.setEnabled(true);
        }
        if (HumanPosition == 3) {
            index3.setEnabled(true);
        }
        if (HumanPosition == 4) {
            index4.setEnabled(true);
        }
        if (HumanPosition == 5) {
            index5.setEnabled(true);
        }
        if (HumanPosition == 6) {
            index6.setEnabled(true);
        }
        if (HumanPosition == 7 || HumanPosition == 32) {
            index7_32.setEnabled(true);
        }
        if (HumanPosition == 8) {
            index8.setEnabled(true);
        }
        if (HumanPosition == 9) {
            index9.setEnabled(true);
        }
        if (HumanPosition == 10) {
            index10.setEnabled(true);
        }
        if (HumanPosition == 11) {
            index11.setEnabled(true);
        }
        if (HumanPosition == 12 || HumanPosition == 27) {
            index12_27.setEnabled(true);
        }
        if (HumanPosition == 13) {
            index13.setEnabled(true);
        }
        if (HumanPosition == 14) {
            index14.setEnabled(true);
        }
        if (HumanPosition == 15) {
            index15.setEnabled(true);
        }
        if (HumanPosition == 16) {
            index16.setEnabled(true);
        }
        if (HumanPosition == 17 || HumanPosition == 22) {
            index17_22.setEnabled(true);
        }
        if (HumanPosition == 18) {
            index18.setEnabled(true);
        }
        if (HumanPosition == 19) {
            index19.setEnabled(true);
        }
        if (HumanPosition == 20) {
            index20.setEnabled(true);
        }
        if (HumanPosition == 21) {
            index21.setEnabled(true);
        }
        if (HumanPosition == 23) {
            index23.setEnabled(true);
        }
        if (HumanPosition == 24) {
            index24.setEnabled(true);
        }
        if (HumanPosition == 25) {
            index25.setEnabled(true);
        }
        if (HumanPosition == 26) {
            index26.setEnabled(true);
        }
        if (HumanPosition == 28) {
            index28.setEnabled(true);
        }
        if (HumanPosition == 29) {
            index29.setEnabled(true);
        }
        if (HumanPosition == 30) {
            index30.setEnabled(true);
        }
        if (HumanPosition == 31) {
            index31.setEnabled(true);
        }
        if (HumanPosition == 33) {
            index33.setEnabled(true);
        }
        if (HumanPosition == 34) {
            index34.setEnabled(true);
        }
        if (HumanPosition == 35) {
            index35.setEnabled(true);
        }
        if (HumanPosition == 36) {
            index36.setEnabled(true);
        }
        if (HumanPosition == 38) {
            index38.setEnabled(true);
        }
        if (HumanPosition == 39) {
            index39.setEnabled(true);
        }
    }

    public void disableComputerSlot(int ComputerPosition) {
        this.ComputerPosition = ComputerPosition;
        if (ComputerPosition == 0) {
            index0.setEnabled(false);
        }
        if (ComputerPosition == 1) {
            index1.setEnabled(false);
        }
        if (ComputerPosition == 2 || ComputerPosition == 37) {
            index2_37.setEnabled(false);
        }
        if (ComputerPosition == 3) {
            index3.setEnabled(false);
        }
        if (ComputerPosition == 4) {
            index4.setEnabled(false);
        }
        if (ComputerPosition == 5) {
            index5.setEnabled(false);
        }
        if (ComputerPosition == 6) {
            index6.setEnabled(false);
        }
        if (ComputerPosition == 7 || ComputerPosition == 32) {
            index7_32.setEnabled(false);
        }
        if (ComputerPosition == 8) {
            index8.setEnabled(false);
        }
        if (ComputerPosition == 9) {
            index9.setEnabled(false);
        }
        if (ComputerPosition == 10) {
            index10.setEnabled(false);
        }
        if (ComputerPosition == 11) {
            index11.setEnabled(false);
        }
        if (ComputerPosition == 12 || ComputerPosition == 27) {
            index12_27.setEnabled(false);
        }
        if (ComputerPosition == 13) {
            index13.setEnabled(false);
        }
        if (ComputerPosition == 14) {
            index14.setEnabled(false);
        }
        if (ComputerPosition == 15) {
            index15.setEnabled(false);
        }
        if (ComputerPosition == 16) {
            index16.setEnabled(false);
        }
        if (ComputerPosition == 17 || ComputerPosition == 22) {
            index17_22.setEnabled(false);
        }
        if (ComputerPosition == 18) {
            index18.setEnabled(false);
        }
        if (ComputerPosition == 19) {
            index19.setEnabled(false);
        }
        if (ComputerPosition == 20) {
            index20.setEnabled(false);
        }
        if (ComputerPosition == 21) {
            index21.setEnabled(false);
        }
        if (ComputerPosition == 23) {
            index23.setEnabled(false);
        }
        if (ComputerPosition == 24) {
            index24.setEnabled(false);
        }
        if (ComputerPosition == 25) {
            index25.setEnabled(false);
        }
        if (ComputerPosition == 26) {
            index26.setEnabled(false);
        }
        if (ComputerPosition == 28) {
            index28.setEnabled(false);
        }
        if (ComputerPosition == 29) {
            index29.setEnabled(false);
        }
        if (ComputerPosition == 30) {
            index30.setEnabled(false);
        }
        if (ComputerPosition == 31) {
            index31.setEnabled(false);
        }
        if (ComputerPosition == 33) {
            index33.setEnabled(false);
        }
        if (ComputerPosition == 34) {
            index34.setEnabled(false);
        }
        if (ComputerPosition == 35) {
            index35.setEnabled(false);
        }
        if (ComputerPosition == 36) {
            index36.setEnabled(false);
        }
        if (ComputerPosition == 38) {
            index38.setEnabled(false);
        }
        if (ComputerPosition == 39) {
            index39.setEnabled(false);
        }
    }

    public void enableComputerSlot(int ComputerPosition) {
        this.ComputerPosition = ComputerPosition;
        if (ComputerPosition == 0) {
            index0.setEnabled(true);
        }
        if (ComputerPosition == 1) {
            index1.setEnabled(true);
        }
        if (ComputerPosition == 2 || ComputerPosition == 37) {
            index2_37.setEnabled(true);
        }
        if (ComputerPosition == 3) {
            index3.setEnabled(true);
        }
        if (ComputerPosition == 4) {
            index4.setEnabled(true);
        }
        if (ComputerPosition == 5) {
            index5.setEnabled(true);
        }
        if (ComputerPosition == 6) {
            index6.setEnabled(true);
        }
        if (ComputerPosition == 7 || ComputerPosition == 32) {
            index7_32.setEnabled(true);
        }
        if (ComputerPosition == 8) {
            index8.setEnabled(true);
        }
        if (ComputerPosition == 9) {
            index9.setEnabled(true);
        }
        if (ComputerPosition == 10) {
            index10.setEnabled(true);
        }
        if (ComputerPosition == 11) {
            index11.setEnabled(true);
        }
        if (ComputerPosition == 12 || ComputerPosition == 27) {
            index12_27.setEnabled(true);
        }
        if (ComputerPosition == 13) {
            index13.setEnabled(true);
        }
        if (ComputerPosition == 14) {
            index14.setEnabled(true);
        }
        if (ComputerPosition == 15) {
            index15.setEnabled(true);
        }
        if (ComputerPosition == 16) {
            index16.setEnabled(true);
        }
        if (ComputerPosition == 17 || ComputerPosition == 22) {
            index17_22.setEnabled(true);
        }
        if (ComputerPosition == 18) {
            index18.setEnabled(true);
        }
        if (ComputerPosition == 19) {
            index19.setEnabled(true);
        }
        if (ComputerPosition == 20) {
            index20.setEnabled(true);
        }
        if (ComputerPosition == 21) {
            index21.setEnabled(true);
        }
        if (ComputerPosition == 23) {
            index23.setEnabled(true);
        }
        if (ComputerPosition == 24) {
            index24.setEnabled(true);
        }
        if (ComputerPosition == 25) {
            index25.setEnabled(true);
        }
        if (ComputerPosition == 26) {
            index26.setEnabled(true);
        }
        if (ComputerPosition == 28) {
            index28.setEnabled(true);
        }
        if (ComputerPosition == 29) {
            index29.setEnabled(true);
        }
        if (ComputerPosition == 30) {
            index30.setEnabled(true);
        }
        if (ComputerPosition == 31) {
            index31.setEnabled(true);
        }
        if (ComputerPosition == 33) {
            index33.setEnabled(true);
        }
        if (ComputerPosition == 34) {
            index34.setEnabled(true);
        }
        if (ComputerPosition == 35) {
            index35.setEnabled(true);
        }
        if (ComputerPosition == 36) {
            index36.setEnabled(true);
        }
        if (ComputerPosition == 38) {
            index38.setEnabled(true);
        }
        if (ComputerPosition == 39) {
            index39.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ComputerCurrentCardGraphic;
    private javax.swing.JLabel ComputerEnvStrTolField;
    private javax.swing.JLabel ComputerForageField;
    private javax.swing.JLabel ComputerMateAttField;
    private javax.swing.JLabel ComputerPopLevelField;
    private javax.swing.JLabel ComputerPredAvoEvaField;
    private javax.swing.JLabel ComputerTerrDefField;
    private javax.swing.JLabel HumanCurrentCardGraphic;
    private javax.swing.JLabel HumanEnvStrTolField;
    private javax.swing.JLabel HumanForageField;
    private javax.swing.JLabel HumanMateAttField;
    private javax.swing.JLabel HumanPopLevelField;
    private javax.swing.JLabel HumanPredAvoEvaField;
    private javax.swing.JLabel HumanTerrDefField;
    private javax.swing.JButton MenuButton;
    private javax.swing.JLabel Player1PositionField;
    private javax.swing.JLabel Player1PositionLabel;
    private javax.swing.JLabel Player1RollField;
    private javax.swing.JLabel Player2PositionField;
    private javax.swing.JLabel Player2PositionLabel;
    private javax.swing.JLabel Player2RollField;
    private javax.swing.JButton QuitButton;
    private javax.swing.JButton RulesButton;
    private javax.swing.JLabel computerPlayerNameField;
    private javax.swing.JLabel computerSpeciesName;
    private javax.swing.JLabel humanPlayerNameField;
    private javax.swing.JPanel humanSpeciesField;
    private javax.swing.JLabel humanSpeciesLabel;
    private javax.swing.JLabel humanSpeciesLabel1;
    private javax.swing.JLabel humanSpeciesLabel10;
    private javax.swing.JLabel humanSpeciesLabel11;
    private javax.swing.JLabel humanSpeciesLabel12;
    private javax.swing.JLabel humanSpeciesLabel13;
    private javax.swing.JLabel humanSpeciesLabel14;
    private javax.swing.JLabel humanSpeciesLabel15;
    private javax.swing.JLabel humanSpeciesLabel16;
    private javax.swing.JLabel humanSpeciesLabel17;
    private javax.swing.JLabel humanSpeciesLabel2;
    private javax.swing.JLabel humanSpeciesLabel3;
    private javax.swing.JLabel humanSpeciesLabel4;
    private javax.swing.JLabel humanSpeciesLabel5;
    private javax.swing.JLabel humanSpeciesLabel6;
    private javax.swing.JLabel humanSpeciesLabel7;
    private javax.swing.JLabel humanSpeciesLabel8;
    private javax.swing.JLabel humanSpeciesLabel9;
    private javax.swing.JLabel humanSpeciesName;
    private javax.swing.JLabel index0;
    private javax.swing.JLabel index1;
    private javax.swing.JLabel index10;
    private javax.swing.JLabel index11;
    private javax.swing.JLabel index12_27;
    private javax.swing.JLabel index13;
    private javax.swing.JLabel index14;
    private javax.swing.JLabel index15;
    private javax.swing.JLabel index16;
    private javax.swing.JLabel index17_22;
    private javax.swing.JLabel index18;
    private javax.swing.JLabel index19;
    private javax.swing.JLabel index20;
    private javax.swing.JLabel index21;
    private javax.swing.JLabel index23;
    private javax.swing.JLabel index24;
    private javax.swing.JLabel index25;
    private javax.swing.JLabel index26;
    private javax.swing.JLabel index28;
    private javax.swing.JLabel index29;
    private javax.swing.JLabel index2_37;
    private javax.swing.JLabel index3;
    private javax.swing.JLabel index30;
    private javax.swing.JLabel index31;
    private javax.swing.JLabel index33;
    private javax.swing.JLabel index34;
    private javax.swing.JLabel index35;
    private javax.swing.JLabel index36;
    private javax.swing.JLabel index38;
    private javax.swing.JLabel index39;
    private javax.swing.JLabel index4;
    private javax.swing.JLabel index5;
    private javax.swing.JLabel index6;
    private javax.swing.JLabel index7_32;
    private javax.swing.JLabel index8;
    private javax.swing.JLabel index9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel player1RollLabel;
    private javax.swing.JLabel player2RollLabel;
    private javax.swing.JButton rollButton;
    // End of variables declaration//GEN-END:variables
}
